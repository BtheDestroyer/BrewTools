#---------------------------------------------------------------------------------
# This Makefile is to be run as a child of 'Makefile'.
# Do not compile using this file directly.
#---------------------------------------------------------------------------------

#---------------------------------------------------------------------------------
# TARGET is the name of the output
# BUILD is the directory where object files & intermediate files will be placed
# SOURCES is a list of directories containing source code
# DATA is a list of directories containing data files
# INCLUDES is a list of directories containing header files
#---------------------------------------------------------------------------------
TARGET		:=	brewtoolswin
BUILD		:=	build/Windows
SOURCES		:=	source
DATA		:=	data
INCLUDES	:=	include

#---------------------------------------------------------------------------------
# options for code generation
#---------------------------------------------------------------------------------
export CC	:=	g++ -x c
export CXX	:=	g++
export AR	:=	gcc-ar
#---------------------------------------------------------------------------------
ARCH	:=	-march=armv6k -mtune=mpcore

CFLAGS	:=	-O2 -g -Wall -Wextra -Werror -ansi -pedantic -D_WIN32

CFLAGS	+=	$(INCLUDE)

CXXFLAGS:= $(CFLAGS) -fno-rtti -fno-exceptions -std=gnu++11

ASFLAGS	:=	-g $(ARCH)

LIBS 	:= 
LIBDIRS	:= $(ROOT)/win-libs
#---------------------------------------------------------------------------------
ifneq ($(ROOT)/$(BUILD),$(CURDIR))

export OUTPUT	:=	$(CURDIR)/lib/lib$(TARGET).a

export VPATH	:=	$(foreach dir,$(SOURCES),$(CURDIR)/$(dir)) \
					$(foreach dir,$(DATA),$(CURDIR)/$(dir)) \
					$(LIBDIRS)

export DEPSDIR	:=	$(CURDIR)/$(BUILD)

CFILES		:=	$(foreach dir,$(SOURCES),$(notdir $(wildcard $(dir)/*.c))) \
				$(foreach dir,$(LIBDIRS),$(notdir $(wildcard $(dir)/*.c)))
CPPFILES	:=	$(foreach dir,$(SOURCES),$(notdir $(wildcard $(dir)/*.cpp))) \
				$(foreach dir,$(LIBDIRS),$(notdir $(wildcard $(dir)/*.cpp)))
BINFILES	:=	$(foreach dir,$(DATA),$(notdir $(wildcard $(dir)/*.*)))

#---------------------------------------------------------------------------------
# use CXX for linking C++ projects, CC for standard C
#---------------------------------------------------------------------------------
ifeq ($(strip $(CPPFILES)),)
#---------------------------------------------------------------------------------
	export LD	:=	$(CC)
#---------------------------------------------------------------------------------
else
#---------------------------------------------------------------------------------
	export LD	:=	$(CXX)
#---------------------------------------------------------------------------------
endif
#---------------------------------------------------------------------------------

ifneq ($(OS),Windows_NT)
	export DEPMKDIR := mkdir dependencies\
else
	export DEPMKDIR := mkdir -p dependencies/
endif

export OFILES	:=	$(addsuffix .o,$(BINFILES)) $(CPPFILES:.cpp=.o) $(CFILES:.c=.o)

export INCLUDE	:=	$(foreach dir,$(INCLUDES),-I$(CURDIR)/$(dir)) \
					$(foreach dir,$(LIBDIRS),-I$(dir)/include) \
					-I$(CURDIR)/$(BUILD)


.PHONY: $(BUILD) clean all
#---------------------------------------------------------------------------------
all: $(OUTPUT)

lib:
	@[ -d $@ ] || mkdir -p $@

$(BUILD): lib
	@[ -d $@ ] || mkdir -p $@

install: $(OUTPUT)
	@echo "There is no installation process for Windowsâ„¢ development."
	@echo "Instead, copy the header files into your project"
	@echo "and include $(OUTPUT) when compiling."

clean:
	@rm -rf $(BUILD)/*

$(OUTPUT): clean $(BUILD)
	@$(MAKE) --no-print-directory -C $(BUILD) -f$(MAKEFILE)

#---------------------------------------------------------------------------------
else
#---------------------------------------------------------------------------------

#---------------------------------------------------------------------------------
# main targets
#---------------------------------------------------------------------------------
$(OUTPUT)	:	$(OFILES)

#---------------------------------------------------------------------------------
%.a:
#---------------------------------------------------------------------------------
	@echo $(notdir $@)
	@rm -f $@
	$(AR) -rc $@ $^

#---------------------------------------------------------------------------------
%.o: %.cpp
#---------------------------------------------------------------------------------
	@echo $(notdir $<)
	$(CXX) -MMD -MP -MF $(DEPSDIR)/$*.d $(CXXFLAGS) -c $< -o $@ $(ERROR_FILTER)

#---------------------------------------------------------------------------------
# Special rule for building glad
glad.o: glad.c
#---------------------------------------------------------------------------------
	@echo "$(notdir $<)"
	$(CC) -MMD -MP -MF $(DEPSDIR)/$*.d $(INCLUDE) -g -D_WIN32 -c $< -o $@ $(ERROR_FILTER)

#---------------------------------------------------------------------------------
%.o: %.c
#---------------------------------------------------------------------------------
	@echo $(notdir $<)
	$(CC) -MMD -MP -MF $(DEPSDIR)/$*.d $(CFLAGS) -c $< -o $@ $(ERROR_FILTER)

#---------------------------------------------------------------------------------------
endif
#---------------------------------------------------------------------------------------
